{
  "name": "memdown",
  "description": "An drop-in replacement for LevelDOWN that works in memory only",
  "version": "1.1.0",
  "homepage": "https://github.com/rvagg/node-memdown",
  "authors": [
    "Rod Vagg <rod@vagg.org> (https://github.com/rvagg)"
  ],
  "contributors": [
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    }
  ],
  "keywords": [
    "leveldb",
    "leveldown",
    "levelup",
    "memory"
  ],
  "main": "./memdown.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/rvagg/node-memdown.git"
  },
  "dependencies": {
    "inherits": "~2.0.1",
    "ltgt": "~1.0.2",
    "functional-red-black-tree": "^1.0.1",
    "abstract-leveldown": "^2.0.3"
  },
  "devDependencies": {
    "tape": "*",
    "rimraf": "*",
    "bench": "*",
    "faucet": "*"
  },
  "browser": {
    "rimraf": false
  },
  "scripts": {
    "test": "node ./test.js --stderr | faucet"
  },
  "testling": {
    "files": "test.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "license": "MIT",
  "readme": "# MemDOWN\n\n<img alt=\"LevelDB Logo\" height=\"100\" src=\"http://leveldb.org/img/logo.svg\">\n\n**A drop-in replacement for [LevelDOWN](https://github.com/rvagg/node-leveldown) that works in memory only. Can be used as a back-end for [LevelUP](https://github.com/rvagg/node-levelup) rather than an actual LevelDB store.**\n\n[![NPM](https://nodei.co/npm/memdown.png?downloads=true)](https://nodei.co/npm/memdown/)\n\n[![Travis](https://secure.travis-ci.org/Level/memdown.png)](http://travis-ci.org/Level/memdown)\n\n[![testling](http://ci.testling.com/rvagg/memdown.png)](http://ci.testling.com/rvagg/memdown)\n\nAs of version 0.7, LevelUP allows you to pass a `'db'` option when you create a new instance. This will override the default LevelDOWN store with a LevelDOWN API compatible object. MemDOWN conforms exactly to the LevelDOWN API but only performs operations in memory, so your data is discarded when the process ends or you release a reference to the database.\n\n## Example\n\n```js\nvar levelup = require('levelup')\n  // note that if multiple instances point to the same location,\n  // the db will be shared, but only per process\n  , db = levelup('/some/location', { db: require('memdown') })\n\ndb.put('name', 'Yuri Irsenovich Kim')\ndb.put('dob', '16 February 1941')\ndb.put('spouse', 'Kim Young-sook')\ndb.put('occupation', 'Clown')\n\ndb.readStream()\n  .on('data', console.log)\n  .on('close', function () { console.log('Show\\'s over folks!') })\n```\n\nNote in this example we're not even bothering to use callbacks on our `.put()` methods even though they are async. We know that MemDOWN operates immediately so the data will go straight into the store.\n\nRunning our example gives:\n\n```\n{ key: 'dob', value: '16 February 1941' }\n{ key: 'name', value: 'Yuri Irsenovich Kim' }\n{ key: 'occupation', value: 'Clown' }\n{ key: 'spouse', value: 'Kim Young-sook' }\nShow's over folks!\n```\n\nGlobal Store\n---\n\nEven though it's in memory the location parameter does do something.  Memdown\nhas a global cache which it uses to save databases by the path string.  You may\nclear this via the Memdown.clearGlobalStore function. By default it doesn't delete\nthe store but replaces it with a new one, open instance of memdown will not be affected. `clearGlobalStore` takes a single parameter, which if truthy clears the store strictly by deleting each individual key.  If there is an in use instance of memdown this will\ncause the in use memdown instance to error.\n\n## Licence\n\nMemDOWN is Copyright (c) 2013-2015 Rod Vagg [@rvagg](https://twitter.com/rvagg) and licensed under the MIT licence. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rvagg/node-memdown/issues"
  },
  "_id": "memdown@1.1.0",
  "_from": "memdown@^1.0.0"
}
